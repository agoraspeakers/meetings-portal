# Ruby CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-ruby/ for more details
#
version: 2
jobs:
  rspec:
    docker:
      # specify the version you desire here
      - image: circleci/ruby:2.6.3-node-browsers

      # Specify service dependencies here if necessary
      # CircleCI maintains a library of pre-built images
      # documented at https://circleci.com/docs/2.0/circleci-images/
      # - image: circleci/postgres:9.4

    working_directory: ~/repo

    steps:
      - checkout

      - run:
          name: Fix permissions
          command: |
            sudo chmod -R o+w /usr/local/bin

      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "Gemfile.lock" }}
            - v1-dependencies-bundler

      - run:
          name: install bundler
          command: |
            bundle install --jobs=4 --retry=3 --path vendor/bundle --binstubs=/usr/local/bundle/bin

      - save_cache:
          paths:
            - ./vendor/bundle
            - /usr/local/bundle
          key: v1-dependencies-{{ checksum "Gemfile.lock" }}

      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "yarn.lock" }}
            - v1-dependencies-yarn

      - run:
          name: install yarn
          command: |
            yarn install --check-files

      - save_cache:
          paths:
            - ./node_modules
          key: v1-dependencies-{{ checksum "yarn.lock" }}

      - run: bundle exec rake db:create
      - run: bundle exec rake db:schema:load

      - run:
          name: Setup Code Climate test-reporter
          command: |
            curl -L https://codeclimate.com/downloads/test-reporter/test-reporter-latest-linux-amd64 > ./cc-test-reporter
            chmod +x ./cc-test-reporter

      - run:
          name: run tests
          command: |
            mkdir /tmp/test-results
            TEST_FILES="$( circleci tests glob "spec/**/*_spec.rb" | circleci tests split --split-by=timings )"

            # Code Climate report coverage
            ./cc-test-reporter before-build

            bundle exec rspec --format progress --format RspecJunitFormatter --out /tmp/test-results/rspec.xml $TEST_FILES

            ./cc-test-reporter after-build --coverage-input-type simplecov --exit-code $?

      - store_test_results:
          path: /tmp/test-results
      - store_artifacts:
          path: /tmp/test-results
          destination: test-results

  rubocop:
    docker:
      - image: circleci/ruby:2.6.3

    working_directory: ~/repo

    steps:
      - checkout

      - run:
          name: Fix permissions
          command: |
            sudo chmod -R o+w /usr/local/bin

      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "Gemfile.lock" }}
            # fallback to using the latest cache if no exact match is found
            - v1-dependencies-bundler

      - run:
          name: install bundler
          command: |
            bundle install --jobs=4 --retry=3 --path vendor/bundle --binstubs=/usr/local/bundle/bin

      - save_cache:
          paths:
            - ./vendor/bundle
            - /usr/local/bundle
          key: v1-dependencies-{{ checksum "Gemfile.lock" }}

      - run:
          name: run rubocop
          command: |
            mkdir /tmp/test-results

            bundle exec rubocop --format simple

      - store_test_results:
          path: /tmp/test-results
      - store_artifacts:
          path: /tmp/test-results
          destination: test-results

  yard:
    docker:
      - image: circleci/ruby:2.6.3

    working_directory: ~/repo

    steps:
      - checkout

      - run:
          name: Fix permissions
          command: |
            sudo chmod -R o+w /usr/local/bin

      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "Gemfile.lock" }}
            # fallback to using the latest cache if no exact match is found
            - v1-dependencies-bundler

      - run:
          name: install bundler
          command: |
            bundle install --jobs=4 --retry=3 --path vendor/bundle --binstubs=/usr/local/bundle/bin

      - save_cache:
          paths:
            - ./vendor/bundle
            - /usr/local/bundle
          key: v1-dependencies-{{ checksum "Gemfile.lock" }}

      - run:
          name: run rubocop
          command: |
            mkdir /tmp/test-results

            bundle exec yard stats --fail-on-warning --list-undoc | \
            ruby -npe 'undoc=0; while line=gets(); puts line; undoc+=1 if line=~/Undocumented Objects:/ end; exit undoc'

      - store_test_results:
          path: /tmp/test-results
      - store_artifacts:
          path: /tmp/test-results
          destination: test-results

  bundled-without:
    docker:
      - image: circleci/ruby:2.6.3
    working_directory: ~/repo
    steps:
      - checkout
      - run:
          name: Ensure the 'BUNDLED WITH' is not provided in Gemfile.lock
          command: |
            ruby -e 'bundled_with=0; while line=gets(); bundled_with+=1 if line=~/BUNDLED WITH/; end; puts "Please remove BUNDLED WITH from Gemfile.lock" if bundled_with>0; exit bundled_with' < Gemfile.lock

workflows:
  version: 2
  build:
    jobs:
      - rspec
      - rubocop
      - yard
      - bundled-without
